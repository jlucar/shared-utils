import e from"lodash";const{each:t,setWith:l}=e,n=e=>{const n={};return t(e,(e,t)=>{l(n,t,e,Object)}),n},{assign:o,each:s,get:a,has:r,isObject:i,kebabCase:c,last:u,mapKeys:d,mapValues:b,merge:f,set:g,size:p,split:m,startCase:y,unset:$}=e,h=e=>"boolean"==typeof e.default?"switch":"input",L=(e,t,l=!1)=>{if(i(t)){if(!l&&!r(t,"default"))throw new Error(`Config "${e}" is missing a "default" value.`)}else t={default:t};return t},C=(e,t,l={})=>{if(delete(t=L(e,t)).key,t.docLink){const e=`Documentation on this feature can be found <a href="${t.docLink}">here</a>.`;t.hint=t.hint?e+`<br>${t.hint}`:e,delete t.docLink}return o({default:null,type:h(t),label:y(u(m(e,"."))),category:"setting"},t,l)},k=(e,t={},l=null)=>(e=d(e,(e,t)=>e.key?e.key:t),b(e,(e,n)=>(l&&l(n,e),C(n,e,t)))),v=(e,t,l)=>{f(e,((e,t,l)=>k(t,l,t=>{if(r(e,t))throw new Error(`Duplicate key: "${t}"`)}))(e,t,l))},w=(e,t=null)=>o({label:y(u(m(e,"."))),order:0,toggleable:!1,description:null,rootKey:null},t),I=async({getComponents:e,getConfigs:t,getLabel:l,getName:n,source:i})=>{const u=n?n():i,d={name:u,label:l?l():y(u)},m=e?await e():null;if(t){const e=k(await t()),l=((e,t={})=>{const l={};let n=!1;return s(e,e=>{if(r(e,"component")){if(!r(l,e.component)){let n={};if(r(t,e.component)){const{getOptions:l}=t[e.component];n=l?l():t[e.component]}l[e.component]=w(e.component,n)}}else n=!0}),n&&p(l)&&(l.unsorted=w("unsorted",{order:999})),l})(e,m);f(d,{configs:e,components:l})}else{const{components:e,configs:t}=(e=>{const t={},l=(e=>b(e,(e,t)=>{const{getOptions:l}=e;return w(t,l?l():null)}))(e);return s(e,(e,n)=>{const{getConfigs:i,getSettings:u,getTranslations:d,getUI:b}=e,m={component:n},h=((e,t)=>{const l={group:{path:"groups"},tab:{path:"tabs"}},n=(e,t=null)=>{const l={};return s(e,(e,n)=>{if(e=L(n,e),t){const{config:o,key:s}=t(n,e);l[s]=o}else l[n]=e}),l},i=(r,i,c,u=!0,d="group",b=null)=>(((n,r,i,c="group")=>{let u=l[c].path,d={};s(i,n=>{if(n.group){const o=n.group;s(l,l=>{const n=a(e,[t,l.path,o]);if(n){g(d,[l.path,o],n),$(e,[t,l.path,o]);const s=a(e,[t,l.path],{});0===p(s)&&$(e,[t,l.path])}})}}),g(e,[t,u,n],o({label:r},d))})(r,i,c,d),n(c,(e,t)=>(t.group=t.group?`${r}.${t.group}`:r,b&&b(e,t),{key:u?`${r}.${e}`:e,config:t})));return{addNested:(e,t)=>n(t,(t,l)=>(l.visibleIf&&(l.visibleIf=`${e}.${l.visibleIf}`),l.longLabel=`${y(e)} ⇢ ${l.longLabel?l.longLabel:l.label?l.label:y(t)}`,{key:`${e}.${t}`,config:l})),addFeature:(e,t,l,n=!1,s=!0)=>{if(r(l,"enabled"))throw new Error(`Feature "${e}" should not contain a property named "enabled".`);return l=o({enabled:L("enabled",n)},l),i(e,t,l,s,"group",(t,l)=>{"enabled"!==t&&(l.visibleIf=`${e}.enabled`)})},addGroup:i,addTab:(e,t)=>{const l=c(e);return i(l,e,t,!1,"tab")},addField:(e,t=null)=>{let l={};const n=`${e}.isVisible`,o=y(e);if(l.isVisible={default:!0,label:"Visible",longLabel:`${o} ⇢ Visible`,styleClasses:"col-md-2"},l.required={default:!1,label:"Required",longLabel:`${o} ⇢ Required`,visibleIf:n,styleClasses:"col-md-2"},l.disabled={default:!1,label:"Disabled",longLabel:`${o} ⇢ Disabled`,visibleIf:n,styleClasses:"col-md-2"},l.readonly={default:!1,label:"Readonly",longLabel:`${o} ⇢ Readonly`,visibleIf:n,styleClasses:"col-md-2"},l.hasAutoFocus={default:!1,label:"Autofocus",longLabel:`${o} ⇢ Autofocus`,visibleIf:n,styleClasses:"col-md-2"},l.pattern={default:"",label:"Pattern",longLabel:`${o} ⇢ Pattern`,visibleIf:n,styleClasses:"col-md-12"},t){const e=(e,t)=>{if(r(l,e))throw new Error(`Field ${e} already exists!`);const s=C(e,t,{visibleIf:n,styleClasses:"col-md-12"});s.longLabel=`${o} ⇢ ${s.label}`,l[e]=s},s=(e,t)=>{f(l[e],L(e,t,!0))};t({insert:e,modify:s})}return i(e,y(e),l,!0)}}})(l,n);i?v(t,i(h),m):(u&&v(t,u(h),o(m,{category:"setting"})),d&&v(t,d(h),o(m,{category:"translation"})),b&&v(t,b(h),o(m,{category:"ui"})))}),{configs:t,components:l}})(m);f(d,{configs:t,components:e})}return d},E=(e,t=null)=>{t=o({nested:!1},t);const l={};return s(e,(e,t)=>{l[t]=e.default}),t.nested?n(l):l};class F extends Error{constructor(e,t){super(`${t.message} ("${e}" source)`),this.name="SourceError"}}export{F as SourceError,n as convertToNested,E as getMockResponse,I as parseSource};
//# sourceMappingURL=index.modern.js.map
